"""A base class for sequence-based search algorithms."""
from abc import abstractmethod
from typing import Callable
from searching.search_algorithm import SearchAlgorithm
from searching.types import Number, OptionalNumber, Sequence


class SequenceSearchAlgorithm(SearchAlgorithm):
	"""An abstract base class for sequnce-based search algorithms."""

	@abstractmethod
	def __call__(self, numbers: Sequence, target: Number) -> OptionalNumber:
		"""
		Search for the target value in the sequence of numbers.

		Args:
			numbers: the sequence of numbers to search through
            target: the number to find in the sequence

		Returns: the index of the number if found, None otherwise
		"""
		return None


class SortedSequenceSearchAlgorithm(SequenceSearchAlgorithm):
	"""An abstract base class for sorted sequence-based search algorithms."""

	def __init__(self, sort: Callable=sorted):
		"""
		Initialize a new sortable search algorithm.

		Args:
			sort: the sorting method to used (default sorted)

		Note: passing None to sort will disable sorting before searching
		"""
		# if sort is none, set sort to a simple lambda to disable sorting
		if sort is None:
			self.sort = lambda numbers: numbers
		# if sort is callable, assign it
		elif callable(sort):
			self.sort = sort
		# sort is the wrong type, raise an error
		else:
			raise TypeError('sort must be a callable method or None')

	def is_in_bounds(self, numbers: Sequence, target: Number) -> bool:
		"""
		Return a boolean determining if the target is in the SORTED sequence.

		Args:
			numbers: a sequence of SORTED numbers
			target: the number to detect in the range of numbers

		Returns: true if target is in the range of numbers, false otherwise

		Note: this condition only holds under the assumption that the sequence
			  of numbers is sorted (in ascending order).
		"""
		if numbers[0] <= target <= numbers[-1]:
			return True
		return False


# explicitly define the public API of the module
__all__ = ['SequenceSearchAlgorithm', 'SortedSequenceSearchAlgorithm']
